{"version":3,"sources":["redux/constant.js","redux/actions/note.js","compoement/Menu/index.jsx","pages/Allnodes/index.jsx","pages/Allbacklogs/index.jsx","redux/actions/backlog.js","pages/Main/index.jsx","pages/noteContent/index.jsx","redux/actions/notetype.js","App.jsx","reportWebVitals.js","redux/reducers/note.js","redux/reducers/backlog.js","redux/reducers/notetype.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["ADDNOTE","ADDBACKLOG","DELETENOTE","DELETEBACKLOG","ADDNOTETYPE","DELETENOTETYPE","addNote","data","type","deleteNote","index","props","className","this","title","Component","toEdit","id","history","push","noteList","length","map","item","onClick","content","isCollect","slice","NodeContainer","connect","state","withRouter","backlogList","BacklogContainer","addBacklog","deleteBacklog","Main","add","path","console","log","pageText","style","backgroundColor","height","position","width","unselectedTintColor","tintColor","barTintColor","Item","icon","selectedIcon","selected","onPress","setState","renderContent","titleRef","React","createRef","contentRef","editor","current","value","newNote","Date","toISOString","success","back","goBack","onSelect","opt","visible","color","handleVisibleChange","match","params","thisContent","find","notetypeList","name","fontSize","placeholder","ref","defaultValue","toLocaleString","overlay","align","overflow","adjustY","adjustX","offset","onVisibleChange","display","alignItems","compileNote","addNoteType","App","exact","component","NoteContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","combineReducers","preState","action","filter","store","createStore","allReducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59061c3d.chunk.js","sourcesContent":["// 定义action中type 的常量值\r\n\r\nexport const ADDNOTE='addnote'\r\nexport const ADDBACKLOG='addbacklog'\r\nexport const DELETENOTE='deletenote'\r\nexport const DELETEBACKLOG='deletebacklog'\r\n\r\nexport const ADDNOTETYPE='addnotetype'\r\nexport const DELETENOTETYPE='deletenotetype'\r\n\r\n","import {ADDNOTE,DELETENOTE  } from \"../constant\";\r\n\r\nexport const addNote=data=>(\r\n    {type:ADDNOTE,data}\r\n)\r\nexport const deleteNote=data=>(\r\n   {type:DELETENOTE,data}\r\n)","import React, { Component } from \"react\";\r\nimport \"./index.scss\";\r\nexport default class index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"menu\">\r\n        <div className=\"type\">全部{this.props.title}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./index.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { addNote, deleteNote } from \"../../redux/actions/note\";\r\nimport Menu from \"../../compoement/Menu\";\r\n\r\n// function mapState(state) {\r\n//     return {\r\n//         noteList: state.noteList\r\n//     }\r\n// }\r\n\r\nclass index extends Component {\r\n  toEdit = (id) => {\r\n    return () => {\r\n      this.props.history.push(`/note/${id}`);\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"allnotes\">\r\n        <Menu title=\"笔记\" />\r\n        {this.props.noteList.length ? (\r\n          <ul>\r\n            {this.props.noteList.map((item) => {\r\n              return (\r\n                <li key={item.id} onClick={this.toEdit(item.id)}>\r\n                  {item.title ? (\r\n                    <div className=\"title\">{item.title}</div>\r\n                  ) : (\r\n                    <div className=\"title\">{item.content}</div>\r\n                  )}\r\n                  {item.title ? (\r\n                    <div className=\"content\">\r\n                      {item.isCollect && (\r\n                        <span className=\"iconfont icon-shoucangxing2\">\r\n                          {\" \"}\r\n                          &nbsp;\r\n                        </span>\r\n                      )}\r\n                      {item.id.slice(0, 8)} | {item.content}\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          <div className=\"empty\">\r\n            <div className=\"iconfont icon-19\"></div>\r\n            <div>没有笔记</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst NodeContainer = connect((state) => ({ noteList: state.noteList }), {\r\n  addNote,\r\n  deleteNote,\r\n})(index);\r\nexport default withRouter(NodeContainer);\r\n","import React, { Component } from \"react\";\r\nimport \"./index.scss\";\r\nimport Menu from \"../../compoement/Menu\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { addBacklog, deleteBacklog } from \"../../redux/actions/backlog\";\r\nclass index extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"allbacklogs\">\r\n        <Menu title=\"待办\" />\r\n        {this.props.length ? (\r\n          <ul>\r\n            {this.props.backlogList.map((item) => {\r\n              return <li key={item.id}>{item.content} </li>;\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          <div className=\"empty\">\r\n            <div className=\"iconfont icon-19\"></div>\r\n            <div>没有待办</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst BacklogContainer = connect(\r\n  (state) => ({ backlogList: state.backlogList }),\r\n  {\r\n    addBacklog,\r\n    deleteBacklog,\r\n  }\r\n)(index);\r\nexport default BacklogContainer;\r\n","import {ADDBACKLOG,DELETEBACKLOG  } from \"../constant\";\r\n\r\nexport const addBacklog=data=>(\r\n    {type:ADDBACKLOG,data}\r\n)\r\nexport const deleteBacklog=data=>(\r\n   {type:DELETEBACKLOG,data}\r\n)","import React, { Component } from \"react\";\r\nimport \"./index.scss\";\r\nimport { TabBar } from \"antd-mobile\";\r\n\r\nimport AllNotes from \"../Allnodes\";\r\nimport Allbacklogs from \"../Allbacklogs\";\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      path: \"notes\",\r\n    };\r\n  }\r\n  renderContent(pageText) {\r\n    return (\r\n      <div style={{ backgroundColor: \"#f1f1f1\", height: \"100%\" }}>\r\n        {this.state.path === \"notes\" ? <AllNotes /> : <Allbacklogs />}\r\n      </div>\r\n    );\r\n  }\r\n  add = () => {\r\n    if (this.state.path === \"notes\") {\r\n      this.props.history.push(\"/note/0\");\r\n    } else {\r\n      console.log(1);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button className=\"addbutton\" onClick={this.add}>\r\n          +\r\n        </button>\r\n        <div style={{ position: \"fixed\", height: \"100%\", width: \"100%\" }}>\r\n          <TabBar\r\n            unselectedTintColor=\"#949494\"\r\n            tintColor=\"#33A3F4\"\r\n            barTintColor=\"#eeeded\"\r\n          >\r\n            <TabBar.Item\r\n              title=\"笔记\"\r\n              key=\"note\"\r\n              icon={\r\n                <div className=\"iconfont tabicon icon-biaoqianA01_biji-99\" />\r\n              }\r\n              selectedIcon={\r\n                <div className=\"iconfont tabicon icon-biaoqianA01_biji-99\" />\r\n              }\r\n              selected={this.state.path === \"notes\"}\r\n              onPress={() => {\r\n                this.setState({\r\n                  path: \"notes\",\r\n                });\r\n              }}\r\n            >\r\n              {this.renderContent(\"note\")}\r\n            </TabBar.Item>\r\n            <TabBar.Item\r\n              icon={<div className=\"iconfont tabicon icon-daiban\" />}\r\n              selectedIcon={<div className=\"iconfont tabicon icon-daiban\" />}\r\n              title=\"待办\"\r\n              key=\"backlog\"\r\n              selected={this.state.path === \"backlogs\"}\r\n              onPress={() => {\r\n                this.setState({\r\n                  path: \"backlogs\",\r\n                });\r\n              }}\r\n            >\r\n              {this.renderContent(\"backlog\")}\r\n            </TabBar.Item>\r\n          </TabBar>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\nimport \"./index.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { addNote, deleteNote } from \"../../redux/actions/note\";\r\nimport { addNoteType } from \"../../redux/actions/notetype\";\r\n\r\nimport { Popover, Toast } from \"antd-mobile\";\r\nconst Item = Popover.Item;\r\nclass index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      type: \"未分类\",\r\n      color: \"\",\r\n    };\r\n  }\r\n  titleRef = React.createRef();\r\n  contentRef = React.createRef();\r\n  editor = () => {\r\n    let title = this.titleRef.current.value;\r\n    let content = this.contentRef.current.value;\r\n    if (title || content) {\r\n      let newNote = {\r\n        id: new Date().toISOString(),\r\n        content,\r\n        title,\r\n        type: this.state.type,\r\n        isCollect: false,\r\n      };\r\n      Toast.success(\"添加成功\", 2);\r\n      this.props.addNote(newNote);\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n  back = () => {\r\n    this.props.history.goBack();\r\n  };\r\n  onSelect = (opt) => {\r\n    this.setState({\r\n      visible: false,\r\n      type: opt.props.value,\r\n      color: opt.props.icon.props.style.color,\r\n    });\r\n  };\r\n  handleVisibleChange = (visible) => {\r\n    this.setState({\r\n      visible,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    if (id !== \"0\") {\r\n      let thisContent = this.props.noteList.find((item) => item.id === id);\r\n      let type = null;\r\n      if (thisContent.type !== \"未分类\") {\r\n        type = this.props.notetypeList.find(\r\n          (item) => item.name === thisContent.type\r\n        );\r\n      }\r\n      this.setState({\r\n        type: type.name,\r\n        color: type.color,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    let id = this.props.match.params.id;\r\n    let thisContent = { content: \"\", title: \"\" };\r\n    if (id !== \"0\") {\r\n      thisContent = this.props.noteList.find((item) => item.id === id);\r\n    }\r\n\r\n    return (\r\n      <div className=\"notecontent\">\r\n        <div className=\"nav\">\r\n          <span\r\n            onClick={this.back}\r\n            className=\"iconfont icon-houtui\"\r\n            style={{ fontSize: \"20px\" }}\r\n          ></span>\r\n          <span\r\n            onClick={this.editor}\r\n            className=\"iconfont icon-gou\"\r\n            style={{ fontSize: \"20px\" }}\r\n          ></span>\r\n        </div>\r\n        <div className=\"title\">\r\n          <input\r\n            placeholder=\"标题\"\r\n            ref={this.titleRef}\r\n            defaultValue={id !== \"0\" ? thisContent.title : \"\"}\r\n          />\r\n        </div>\r\n        <div className=\"type\">\r\n          <span>今天 {new Date().toLocaleString().slice(9, 14)} </span>\r\n          <span>\r\n            <div id=\"notetype\">\r\n              <Popover\r\n                visible={this.state.visible}\r\n                overlay={[\r\n                  this.props.notetypeList.map((item) => {\r\n                    return (\r\n                      <Item\r\n                        value={item.name}\r\n                        icon={\r\n                          <span\r\n                            className=\"iconfont icon-tubiaozhizuomoban-\"\r\n                            style={{ color: item.color, fontSize: \"20px\" }}\r\n                          ></span>\r\n                        }\r\n                      >\r\n                        &nbsp;\r\n                        <span> {item.name}</span>\r\n                      </Item>\r\n                    );\r\n                  }),\r\n                  <Item\r\n                    value=\"未分类\"\r\n                    icon={\r\n                      <span\r\n                        className=\"iconfont icon-tubiaozhizuomoban-\"\r\n                        style={{ fontSize: \"20px\" }}\r\n                      ></span>\r\n                    }\r\n                  >\r\n                    &nbsp;\r\n                    <span>未分类</span>\r\n                  </Item>,\r\n                  <Item\r\n                    icon={<span className=\"iconfont icon-biaoqian1\"></span>}\r\n                  >\r\n                    &nbsp;\r\n                    <span>新建</span>\r\n                  </Item>,\r\n                ]}\r\n                align={{\r\n                  overflow: { adjustY: 0, adjustX: 0 },\r\n                  offset: [-10, 0],\r\n                }}\r\n                onVisibleChange={this.handleVisibleChange}\r\n                onSelect={this.onSelect}\r\n              >\r\n                <div\r\n                  style={{\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <span\r\n                      className=\"iconfont icon-tubiaozhizuomoban-\"\r\n                      style={{ fontSize: \"20px\", color: this.state.color }}\r\n                    ></span>\r\n                    {this.state.type}\r\n                    <span className=\"iconfont icon-xiaosanjiaodown\"></span>\r\n                  </div>\r\n                </div>\r\n              </Popover>\r\n            </div>\r\n          </span>\r\n        </div>\r\n        <div className=\"content\">\r\n          <textarea\r\n            type=\"text\"\r\n            ref={this.contentRef}\r\n            defaultValue={id !== \"0\" ? thisContent.content : \"\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst compileNote = connect(\r\n  (state) => ({ noteList: state.noteList, notetypeList: state.notetypeList }),\r\n  {\r\n    addNote,\r\n    deleteNote,\r\n    addNoteType,\r\n  }\r\n)(index);\r\nexport default compileNote;\r\n","import {ADDNOTETYPE,DELETENOTETYPE  } from \"../constant\";\r\n\r\nexport const addNoteType=data=>(\r\n    {type:ADDNOTETYPE,data}\r\n)\r\nexport const deleteNoteType=data=>(\r\n   {type:DELETENOTETYPE,data}\r\n)","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Main from \"./pages/Main/index\";\nimport NoteContent from \"./pages/noteContent\";\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <Route path=\"/\" exact component={Main} />\n        <Route path=\"/note/:id\" exact component={NoteContent} />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ADDNOTE,DELETENOTE  } from \"../constant\";\r\n\r\n// {id:'001',content:'新建笔记',title:'aa',type:'未分类',isCollect:true}\r\nconst initState=[]\r\nexport default  function countReducer(preState=initState,action){\r\n    // if(preState===undefined)preState=0\r\n const {type,data}=action\r\n switch (type) {\r\n            case ADDNOTE:\r\n                preState=[...preState,data]\r\n                break\r\n            case DELETENOTE:\r\n                preState=preState.filter(item=>item.id!==data.id)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n   return preState \r\n}\r\n\r\n\r\n","import {ADDBACKLOG,DELETEBACKLOG  } from \"../constant\";\r\nconst initState=[]\r\nexport default  function countReducer(preState=initState,action){\r\n    // if(preState===undefined)preState=0\r\n const {type,data}=action\r\n switch (type) {\r\n            case ADDBACKLOG:\r\n                preState=[...preState,data]\r\n                break\r\n            case DELETEBACKLOG:\r\n                preState=preState.filter(item=>item.id!==data.id)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n   return preState \r\n}","import {ADDNOTETYPE,DELETENOTETYPE  } from \"../constant\";\r\n\r\nconst initState=[ { name: \"旅游\", color: \"#ffbb00\" },\r\n{ name: \"个人\", color: \"#03a582\" },\r\n{ name: \"生活\", color: \"#44d17a\" },\r\n{ name: \"工作\", color: \"#ff0707\" },]\r\nexport default  function countReducer(preState=initState,action){\r\n    // if(preState===undefined)preState=0\r\n const {type,data}=action\r\n switch (type) {\r\n            case ADDNOTETYPE:\r\n                preState=[...preState,data]\r\n                break\r\n            case DELETENOTETYPE:\r\n                preState=preState.filter(item=>item.id!==data.id)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n   return preState \r\n}\r\n\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport note from './note'\r\nimport backlog from './backlog'\r\nimport notetype from './notetype'\r\nexport default combineReducers({\r\n    noteList:note,\r\n    backlogList:backlog,\r\n    notetypeList:notetype\r\n})","import { createStore } from 'redux'\r\n\r\n\r\n// 开发者工具\r\n// import {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\n// 引入汇总后的reducers\r\nimport allReducers from './reducers/index'\r\n\r\n// const store = createStore(allReducers,applyMiddleware(thunk))\r\nconst store = createStore(allReducers)\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/fonts/iconfont.css'\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store'\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from 'react-router-dom'\n// import Test from './pages/test.jsx'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n      <App />\n\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}